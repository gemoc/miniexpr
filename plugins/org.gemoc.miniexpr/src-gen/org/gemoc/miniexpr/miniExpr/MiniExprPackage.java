/**
 * generated by Xtext 2.22.0
 */
package org.gemoc.miniexpr.miniExpr;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.gemoc.miniexpr.miniExpr.MiniExprFactory
 * @model kind="package"
 * @generated
 */
public interface MiniExprPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "miniExpr";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.eclipse.org/gemoc/miniexpr/MiniExpr";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "miniExpr";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MiniExprPackage eINSTANCE = org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl.init();

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.ModelImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__EXPRESSIONS = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.ExpressionImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.RefImpl <em>Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.RefImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getRef()
   * @generated
   */
  int REF = 2;

  /**
   * The number of structural features of the '<em>Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REF_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.SimpleVarRefImpl <em>Simple Var Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.SimpleVarRefImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getSimpleVarRef()
   * @generated
   */
  int SIMPLE_VAR_REF = 3;

  /**
   * The feature id for the '<em><b>Target</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_VAR_REF__TARGET = REF_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Simple Var Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_VAR_REF_FEATURE_COUNT = REF_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.ArraySizeImpl <em>Array Size</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.ArraySizeImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getArraySize()
   * @generated
   */
  int ARRAY_SIZE = 4;

  /**
   * The feature id for the '<em><b>Array</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_SIZE__ARRAY = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Array Size</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_SIZE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.ContractedIfImpl <em>Contracted If</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.ContractedIfImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getContractedIf()
   * @generated
   */
  int CONTRACTED_IF = 5;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTRACTED_IF__CONDITION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTRACTED_IF__THEN = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTRACTED_IF__ELSE = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Contracted If</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTRACTED_IF_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.OrImpl <em>Or</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.OrImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getOr()
   * @generated
   */
  int OR = 6;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Or</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.AndImpl <em>And</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.AndImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getAnd()
   * @generated
   */
  int AND = 7;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>And</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.EqualityImpl <em>Equality</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.EqualityImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getEquality()
   * @generated
   */
  int EQUALITY = 8;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Equality</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.ComparisonImpl <em>Comparison</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.ComparisonImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getComparison()
   * @generated
   */
  int COMPARISON = 9;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Comparison</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.PlusImpl <em>Plus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.PlusImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getPlus()
   * @generated
   */
  int PLUS = 10;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Plus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.MinusImpl <em>Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.MinusImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getMinus()
   * @generated
   */
  int MINUS = 11;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.MulImpl <em>Mul</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.MulImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getMul()
   * @generated
   */
  int MUL = 12;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Mul</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.DivImpl <em>Div</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.DivImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getDiv()
   * @generated
   */
  int DIV = 13;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Div</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.ModuloImpl <em>Modulo</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.ModuloImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getModulo()
   * @generated
   */
  int MODULO = 14;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULO__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULO__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULO__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Modulo</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULO_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.ParenthesisImpl <em>Parenthesis</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.ParenthesisImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getParenthesis()
   * @generated
   */
  int PARENTHESIS = 15;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARENTHESIS__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Parenthesis</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARENTHESIS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.UnaryMinusImpl <em>Unary Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.UnaryMinusImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getUnaryMinus()
   * @generated
   */
  int UNARY_MINUS = 16;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_MINUS__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Unary Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_MINUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.NotImpl <em>Not</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.NotImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getNot()
   * @generated
   */
  int NOT = 17;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Not</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.NumberConstantImpl <em>Number Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.NumberConstantImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getNumberConstant()
   * @generated
   */
  int NUMBER_CONSTANT = 18;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Number Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.BoolConstantImpl <em>Bool Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.BoolConstantImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getBoolConstant()
   * @generated
   */
  int BOOL_CONSTANT = 19;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Bool Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.VectorConstantImpl <em>Vector Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.VectorConstantImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getVectorConstant()
   * @generated
   */
  int VECTOR_CONSTANT = 20;

  /**
   * The feature id for the '<em><b>Values</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VECTOR_CONSTANT__VALUES = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Vector Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VECTOR_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.ArrayRefImpl <em>Array Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.ArrayRefImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getArrayRef()
   * @generated
   */
  int ARRAY_REF = 21;

  /**
   * The feature id for the '<em><b>Array</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REF__ARRAY = REF_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Indices</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REF__INDICES = REF_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Array Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REF_FEATURE_COUNT = REF_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.gemoc.miniexpr.miniExpr.impl.PropertyRefImpl <em>Property Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.gemoc.miniexpr.miniExpr.impl.PropertyRefImpl
   * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getPropertyRef()
   * @generated
   */
  int PROPERTY_REF = 22;

  /**
   * The feature id for the '<em><b>Object</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_REF__OBJECT = REF_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Property</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_REF__PROPERTY = REF_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Property Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_REF_FEATURE_COUNT = REF_FEATURE_COUNT + 2;


  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link org.gemoc.miniexpr.miniExpr.Model#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Model#getExpressions()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Expressions();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Ref <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ref</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Ref
   * @generated
   */
  EClass getRef();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.SimpleVarRef <em>Simple Var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Var Ref</em>'.
   * @see org.gemoc.miniexpr.miniExpr.SimpleVarRef
   * @generated
   */
  EClass getSimpleVarRef();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.SimpleVarRef#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Target</em>'.
   * @see org.gemoc.miniexpr.miniExpr.SimpleVarRef#getTarget()
   * @see #getSimpleVarRef()
   * @generated
   */
  EAttribute getSimpleVarRef_Target();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.ArraySize <em>Array Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Array Size</em>'.
   * @see org.gemoc.miniexpr.miniExpr.ArraySize
   * @generated
   */
  EClass getArraySize();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.ArraySize#getArray <em>Array</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Array</em>'.
   * @see org.gemoc.miniexpr.miniExpr.ArraySize#getArray()
   * @see #getArraySize()
   * @generated
   */
  EReference getArraySize_Array();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.ContractedIf <em>Contracted If</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Contracted If</em>'.
   * @see org.gemoc.miniexpr.miniExpr.ContractedIf
   * @generated
   */
  EClass getContractedIf();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.ContractedIf#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.gemoc.miniexpr.miniExpr.ContractedIf#getCondition()
   * @see #getContractedIf()
   * @generated
   */
  EReference getContractedIf_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.ContractedIf#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see org.gemoc.miniexpr.miniExpr.ContractedIf#getThen()
   * @see #getContractedIf()
   * @generated
   */
  EReference getContractedIf_Then();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.ContractedIf#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else</em>'.
   * @see org.gemoc.miniexpr.miniExpr.ContractedIf#getElse()
   * @see #getContractedIf()
   * @generated
   */
  EReference getContractedIf_Else();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Or <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Or
   * @generated
   */
  EClass getOr();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Or#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Or#getLeft()
   * @see #getOr()
   * @generated
   */
  EReference getOr_Left();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.Or#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Or#getOp()
   * @see #getOr()
   * @generated
   */
  EAttribute getOr_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Or#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Or#getRight()
   * @see #getOr()
   * @generated
   */
  EReference getOr_Right();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.And <em>And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And</em>'.
   * @see org.gemoc.miniexpr.miniExpr.And
   * @generated
   */
  EClass getAnd();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.And#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.gemoc.miniexpr.miniExpr.And#getLeft()
   * @see #getAnd()
   * @generated
   */
  EReference getAnd_Left();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.And#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.gemoc.miniexpr.miniExpr.And#getOp()
   * @see #getAnd()
   * @generated
   */
  EAttribute getAnd_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.And#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.gemoc.miniexpr.miniExpr.And#getRight()
   * @see #getAnd()
   * @generated
   */
  EReference getAnd_Right();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Equality <em>Equality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equality</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Equality
   * @generated
   */
  EClass getEquality();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Equality#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Equality#getLeft()
   * @see #getEquality()
   * @generated
   */
  EReference getEquality_Left();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.Equality#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Equality#getOp()
   * @see #getEquality()
   * @generated
   */
  EAttribute getEquality_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Equality#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Equality#getRight()
   * @see #getEquality()
   * @generated
   */
  EReference getEquality_Right();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Comparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comparison</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Comparison
   * @generated
   */
  EClass getComparison();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Comparison#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Comparison#getLeft()
   * @see #getComparison()
   * @generated
   */
  EReference getComparison_Left();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.Comparison#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Comparison#getOp()
   * @see #getComparison()
   * @generated
   */
  EAttribute getComparison_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Comparison#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Comparison#getRight()
   * @see #getComparison()
   * @generated
   */
  EReference getComparison_Right();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Plus <em>Plus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Plus</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Plus
   * @generated
   */
  EClass getPlus();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Plus#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Plus#getLeft()
   * @see #getPlus()
   * @generated
   */
  EReference getPlus_Left();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.Plus#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Plus#getOp()
   * @see #getPlus()
   * @generated
   */
  EAttribute getPlus_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Plus#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Plus#getRight()
   * @see #getPlus()
   * @generated
   */
  EReference getPlus_Right();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Minus <em>Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Minus</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Minus
   * @generated
   */
  EClass getMinus();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Minus#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Minus#getLeft()
   * @see #getMinus()
   * @generated
   */
  EReference getMinus_Left();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.Minus#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Minus#getOp()
   * @see #getMinus()
   * @generated
   */
  EAttribute getMinus_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Minus#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Minus#getRight()
   * @see #getMinus()
   * @generated
   */
  EReference getMinus_Right();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Mul <em>Mul</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mul</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Mul
   * @generated
   */
  EClass getMul();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Mul#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Mul#getLeft()
   * @see #getMul()
   * @generated
   */
  EReference getMul_Left();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.Mul#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Mul#getOp()
   * @see #getMul()
   * @generated
   */
  EAttribute getMul_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Mul#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Mul#getRight()
   * @see #getMul()
   * @generated
   */
  EReference getMul_Right();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Div <em>Div</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Div</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Div
   * @generated
   */
  EClass getDiv();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Div#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Div#getLeft()
   * @see #getDiv()
   * @generated
   */
  EReference getDiv_Left();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.Div#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Div#getOp()
   * @see #getDiv()
   * @generated
   */
  EAttribute getDiv_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Div#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Div#getRight()
   * @see #getDiv()
   * @generated
   */
  EReference getDiv_Right();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Modulo <em>Modulo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Modulo</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Modulo
   * @generated
   */
  EClass getModulo();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Modulo#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Modulo#getLeft()
   * @see #getModulo()
   * @generated
   */
  EReference getModulo_Left();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.Modulo#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Modulo#getOp()
   * @see #getModulo()
   * @generated
   */
  EAttribute getModulo_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Modulo#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Modulo#getRight()
   * @see #getModulo()
   * @generated
   */
  EReference getModulo_Right();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Parenthesis <em>Parenthesis</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parenthesis</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Parenthesis
   * @generated
   */
  EClass getParenthesis();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Parenthesis#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Parenthesis#getExpression()
   * @see #getParenthesis()
   * @generated
   */
  EReference getParenthesis_Expression();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.UnaryMinus <em>Unary Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Minus</em>'.
   * @see org.gemoc.miniexpr.miniExpr.UnaryMinus
   * @generated
   */
  EClass getUnaryMinus();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.UnaryMinus#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.gemoc.miniexpr.miniExpr.UnaryMinus#getExpression()
   * @see #getUnaryMinus()
   * @generated
   */
  EReference getUnaryMinus_Expression();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.Not <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Not
   * @generated
   */
  EClass getNot();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.Not#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.gemoc.miniexpr.miniExpr.Not#getExpression()
   * @see #getNot()
   * @generated
   */
  EReference getNot_Expression();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.NumberConstant <em>Number Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number Constant</em>'.
   * @see org.gemoc.miniexpr.miniExpr.NumberConstant
   * @generated
   */
  EClass getNumberConstant();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.NumberConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.gemoc.miniexpr.miniExpr.NumberConstant#getValue()
   * @see #getNumberConstant()
   * @generated
   */
  EAttribute getNumberConstant_Value();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.BoolConstant <em>Bool Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Constant</em>'.
   * @see org.gemoc.miniexpr.miniExpr.BoolConstant
   * @generated
   */
  EClass getBoolConstant();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.BoolConstant#isValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.gemoc.miniexpr.miniExpr.BoolConstant#isValue()
   * @see #getBoolConstant()
   * @generated
   */
  EAttribute getBoolConstant_Value();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.VectorConstant <em>Vector Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Vector Constant</em>'.
   * @see org.gemoc.miniexpr.miniExpr.VectorConstant
   * @generated
   */
  EClass getVectorConstant();

  /**
   * Returns the meta object for the containment reference list '{@link org.gemoc.miniexpr.miniExpr.VectorConstant#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Values</em>'.
   * @see org.gemoc.miniexpr.miniExpr.VectorConstant#getValues()
   * @see #getVectorConstant()
   * @generated
   */
  EReference getVectorConstant_Values();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.ArrayRef <em>Array Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Array Ref</em>'.
   * @see org.gemoc.miniexpr.miniExpr.ArrayRef
   * @generated
   */
  EClass getArrayRef();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.ArrayRef#getArray <em>Array</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Array</em>'.
   * @see org.gemoc.miniexpr.miniExpr.ArrayRef#getArray()
   * @see #getArrayRef()
   * @generated
   */
  EReference getArrayRef_Array();

  /**
   * Returns the meta object for the containment reference list '{@link org.gemoc.miniexpr.miniExpr.ArrayRef#getIndices <em>Indices</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Indices</em>'.
   * @see org.gemoc.miniexpr.miniExpr.ArrayRef#getIndices()
   * @see #getArrayRef()
   * @generated
   */
  EReference getArrayRef_Indices();

  /**
   * Returns the meta object for class '{@link org.gemoc.miniexpr.miniExpr.PropertyRef <em>Property Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Property Ref</em>'.
   * @see org.gemoc.miniexpr.miniExpr.PropertyRef
   * @generated
   */
  EClass getPropertyRef();

  /**
   * Returns the meta object for the containment reference '{@link org.gemoc.miniexpr.miniExpr.PropertyRef#getObject <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Object</em>'.
   * @see org.gemoc.miniexpr.miniExpr.PropertyRef#getObject()
   * @see #getPropertyRef()
   * @generated
   */
  EReference getPropertyRef_Object();

  /**
   * Returns the meta object for the attribute '{@link org.gemoc.miniexpr.miniExpr.PropertyRef#getProperty <em>Property</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Property</em>'.
   * @see org.gemoc.miniexpr.miniExpr.PropertyRef#getProperty()
   * @see #getPropertyRef()
   * @generated
   */
  EAttribute getPropertyRef_Property();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MiniExprFactory getMiniExprFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.ModelImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__EXPRESSIONS = eINSTANCE.getModel_Expressions();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.ExpressionImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.RefImpl <em>Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.RefImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getRef()
     * @generated
     */
    EClass REF = eINSTANCE.getRef();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.SimpleVarRefImpl <em>Simple Var Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.SimpleVarRefImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getSimpleVarRef()
     * @generated
     */
    EClass SIMPLE_VAR_REF = eINSTANCE.getSimpleVarRef();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_VAR_REF__TARGET = eINSTANCE.getSimpleVarRef_Target();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.ArraySizeImpl <em>Array Size</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.ArraySizeImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getArraySize()
     * @generated
     */
    EClass ARRAY_SIZE = eINSTANCE.getArraySize();

    /**
     * The meta object literal for the '<em><b>Array</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_SIZE__ARRAY = eINSTANCE.getArraySize_Array();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.ContractedIfImpl <em>Contracted If</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.ContractedIfImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getContractedIf()
     * @generated
     */
    EClass CONTRACTED_IF = eINSTANCE.getContractedIf();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTRACTED_IF__CONDITION = eINSTANCE.getContractedIf_Condition();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTRACTED_IF__THEN = eINSTANCE.getContractedIf_Then();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTRACTED_IF__ELSE = eINSTANCE.getContractedIf_Else();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.OrImpl <em>Or</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.OrImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getOr()
     * @generated
     */
    EClass OR = eINSTANCE.getOr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR__LEFT = eINSTANCE.getOr_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OR__OP = eINSTANCE.getOr_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR__RIGHT = eINSTANCE.getOr_Right();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.AndImpl <em>And</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.AndImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getAnd()
     * @generated
     */
    EClass AND = eINSTANCE.getAnd();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND__LEFT = eINSTANCE.getAnd_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AND__OP = eINSTANCE.getAnd_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND__RIGHT = eINSTANCE.getAnd_Right();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.EqualityImpl <em>Equality</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.EqualityImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getEquality()
     * @generated
     */
    EClass EQUALITY = eINSTANCE.getEquality();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY__LEFT = eINSTANCE.getEquality_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQUALITY__OP = eINSTANCE.getEquality_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY__RIGHT = eINSTANCE.getEquality_Right();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.ComparisonImpl <em>Comparison</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.ComparisonImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getComparison()
     * @generated
     */
    EClass COMPARISON = eINSTANCE.getComparison();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON__LEFT = eINSTANCE.getComparison_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON__OP = eINSTANCE.getComparison_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON__RIGHT = eINSTANCE.getComparison_Right();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.PlusImpl <em>Plus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.PlusImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getPlus()
     * @generated
     */
    EClass PLUS = eINSTANCE.getPlus();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS__LEFT = eINSTANCE.getPlus_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PLUS__OP = eINSTANCE.getPlus_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS__RIGHT = eINSTANCE.getPlus_Right();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.MinusImpl <em>Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.MinusImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getMinus()
     * @generated
     */
    EClass MINUS = eINSTANCE.getMinus();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MINUS__LEFT = eINSTANCE.getMinus_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MINUS__OP = eINSTANCE.getMinus_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MINUS__RIGHT = eINSTANCE.getMinus_Right();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.MulImpl <em>Mul</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.MulImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getMul()
     * @generated
     */
    EClass MUL = eINSTANCE.getMul();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MUL__LEFT = eINSTANCE.getMul_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MUL__OP = eINSTANCE.getMul_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MUL__RIGHT = eINSTANCE.getMul_Right();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.DivImpl <em>Div</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.DivImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getDiv()
     * @generated
     */
    EClass DIV = eINSTANCE.getDiv();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIV__LEFT = eINSTANCE.getDiv_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DIV__OP = eINSTANCE.getDiv_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIV__RIGHT = eINSTANCE.getDiv_Right();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.ModuloImpl <em>Modulo</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.ModuloImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getModulo()
     * @generated
     */
    EClass MODULO = eINSTANCE.getModulo();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODULO__LEFT = eINSTANCE.getModulo_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODULO__OP = eINSTANCE.getModulo_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODULO__RIGHT = eINSTANCE.getModulo_Right();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.ParenthesisImpl <em>Parenthesis</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.ParenthesisImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getParenthesis()
     * @generated
     */
    EClass PARENTHESIS = eINSTANCE.getParenthesis();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARENTHESIS__EXPRESSION = eINSTANCE.getParenthesis_Expression();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.UnaryMinusImpl <em>Unary Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.UnaryMinusImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getUnaryMinus()
     * @generated
     */
    EClass UNARY_MINUS = eINSTANCE.getUnaryMinus();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_MINUS__EXPRESSION = eINSTANCE.getUnaryMinus_Expression();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.NotImpl <em>Not</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.NotImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getNot()
     * @generated
     */
    EClass NOT = eINSTANCE.getNot();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT__EXPRESSION = eINSTANCE.getNot_Expression();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.NumberConstantImpl <em>Number Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.NumberConstantImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getNumberConstant()
     * @generated
     */
    EClass NUMBER_CONSTANT = eINSTANCE.getNumberConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER_CONSTANT__VALUE = eINSTANCE.getNumberConstant_Value();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.BoolConstantImpl <em>Bool Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.BoolConstantImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getBoolConstant()
     * @generated
     */
    EClass BOOL_CONSTANT = eINSTANCE.getBoolConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL_CONSTANT__VALUE = eINSTANCE.getBoolConstant_Value();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.VectorConstantImpl <em>Vector Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.VectorConstantImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getVectorConstant()
     * @generated
     */
    EClass VECTOR_CONSTANT = eINSTANCE.getVectorConstant();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VECTOR_CONSTANT__VALUES = eINSTANCE.getVectorConstant_Values();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.ArrayRefImpl <em>Array Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.ArrayRefImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getArrayRef()
     * @generated
     */
    EClass ARRAY_REF = eINSTANCE.getArrayRef();

    /**
     * The meta object literal for the '<em><b>Array</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_REF__ARRAY = eINSTANCE.getArrayRef_Array();

    /**
     * The meta object literal for the '<em><b>Indices</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_REF__INDICES = eINSTANCE.getArrayRef_Indices();

    /**
     * The meta object literal for the '{@link org.gemoc.miniexpr.miniExpr.impl.PropertyRefImpl <em>Property Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.gemoc.miniexpr.miniExpr.impl.PropertyRefImpl
     * @see org.gemoc.miniexpr.miniExpr.impl.MiniExprPackageImpl#getPropertyRef()
     * @generated
     */
    EClass PROPERTY_REF = eINSTANCE.getPropertyRef();

    /**
     * The meta object literal for the '<em><b>Object</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROPERTY_REF__OBJECT = eINSTANCE.getPropertyRef_Object();

    /**
     * The meta object literal for the '<em><b>Property</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROPERTY_REF__PROPERTY = eINSTANCE.getPropertyRef_Property();

  }

} //MiniExprPackage
